generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  email     String   @unique
  name      String?
  avatar    String?
  status    String   @default("1")
  isSystem  String   @default("0")  // 是否为系统默认数据，0-否 1-是，系统默认数据无法删除
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  Role      Role     @relation(fields: [roleId], references: [id])

  @@index([roleId])
}

model Role {
  id          Int      @id @default(autoincrement())
  key         String   @unique   // 角色唯一标识
  name        String   @unique
  description String?
  status      String   @default("1")
  isSystem    String   @default("0")  // 是否为系统默认数据，0-否 1-是，系统默认数据无法删除
  createdAt   DateTime @default(now())
  updatedAt   DateTime? @updatedAt
  User        User[]
}

model Config {
  id          Int       @id @default(autoincrement())
  key         String    @unique
  value       String
  description String?
  type        String    @default("string")  // 可以是string, number, boolean, json等
  group       String?   // 可以用于分组配置项
  sort        Int       @default(0)         // 排序字段
  status      String    @default("1")       // 1-启用 0-禁用
  isSystem    String    @default("0")       // 是否为系统默认数据，0-否 1-是，系统默认数据无法删除
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
}

model Dictionary {
  id          Int              @id @default(autoincrement())
  code        String           @unique      // 字典编码，唯一标识
  name        String           // 字典名称
  description String?          // 字典描述
  sort        Int              @default(0)  // 排序字段
  status      String           @default("1")  // 1-启用 0-禁用
  isSystem    String           @default("0")  // 是否为系统默认数据，0-否 1-是，系统默认数据无法删除
  createdAt   DateTime         @default(now())
  updatedAt   DateTime?        @updatedAt
  items       DictionaryItem[] // 字典项
}

model DictionaryItem {
  id           Int       @id @default(autoincrement())
  dictionaryId Int       // 所属字典ID
  code         String    // 字典项编码
  value        String    // 字典项值
  label        String    // 字典项标签
  color        String?   // 字典项颜色值，如 #FF0000
  extra        String?   // 附加数据，JSON字符串
  sort         Int       @default(0)  // 排序字段
  status       String    @default("1")  // 1-启用 0-禁用
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  dictionary   Dictionary @relation(fields: [dictionaryId], references: [id], onDelete: Cascade)

  @@index([dictionaryId])
  @@unique([dictionaryId, code])
}

model CodeGenerator {
  id          Int       @id @default(autoincrement())
  name        String    // 代码生成名称
  description String?   // 描述
  tableName   String    // 表名称
  moduleName  String    // 模块名称
  businessName String   // 业务名称
  packageName String    // 包名称
  functionName String   // 功能名称
  functionAuthor String // 功能作者
  tablePrefix String?   // 表前缀
  options     String?   // 选项，如是否生成API、是否生成表单等，JSON格式
  remark      String?   // 备注
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  columns     CodeGeneratorColumn[] // 列信息
}

model CodeGeneratorColumn {
  id              Int      @id @default(autoincrement())
  generatorId     Int      // 关联的代码生成器ID
  columnName      String   // 列名
  columnComment   String?  // 列注释
  columnType      String   // 列类型
  tsType          String   // TypeScript类型
  isPk            Boolean  @default(false) // 是否是主键
  isIncrement     Boolean  @default(false) // 是否自增
  isRequired      Boolean  @default(true)  // 是否必填
  isInsert        Boolean  @default(true)  // 是否为插入字段
  isEdit          Boolean  @default(true)  // 是否为编辑字段
  isList          Boolean  @default(true)  // 是否为列表字段
  isQuery         Boolean  @default(false) // 是否为查询字段
  queryType       String?  // 查询方式（eq等于、like模糊）
  htmlType        String?  // 显示类型（文本框、文本域、下拉框、复选框、单选框、日期控件）
  dictType        String?  // 字典类型
  sort            Int      @default(0)     // 排序
  generator       CodeGenerator @relation(fields: [generatorId], references: [id], onDelete: Cascade)

  @@index([generatorId])
}
