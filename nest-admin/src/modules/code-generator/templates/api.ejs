import { http } from '@/utils/http';

/**
 * <%= modelName %> API
 * @author <%= generator.functionAuthor %>
 * @date <%= new Date().toISOString().slice(0, 10) %>
 */

/**
 * <%= modelName %> 数据类型
 */
export interface <%= className %> {
<% columns.forEach(column => { %>
  /**
   * <%= column.columnComment || column.columnName %>
   */
  <%= column.columnName %><%= column.isRequired ? '' : '?' %>: <%= column.tsType === 'Date' ? 'string' : column.tsType %>;
<% }); %>
}

/**
 * <%= modelName %> 查询参数
 */
export interface <%= className %>Query {
  /**
   * 页码
   */
  page?: number;
  
  /**
   * 每页条数
   */
  pageSize?: number;

<% columns.forEach(column => { 
  if (column.isQuery) { %>
  /**
   * <%= column.columnComment || column.columnName %>
   */
  <%= column.columnName %>?: <%= column.tsType === 'Date' ? 'string' : column.tsType %>;
<% }}); %>
}

/**
 * <%= modelName %> 列表结果
 */
export interface <%= className %>ListResult {
  /**
   * 总条数
   */
  total: number;
  
  /**
   * 数据列表
   */
  list: <%= className %>[];
}

/**
 * 创建<%= modelName %>
 * @param data 
 */
export function create<%= className %>(data: Omit<<%= className %>, <% 
  const omitFields = columns.filter(col => col.isPk || col.isIncrement || (!col.isInsert)).map(col => `'${col.columnName}'`).join(' | '); 
%><%= omitFields %>> ) {
  return http.post<<%=className %>>('/<%= helper.toKebabCase(className) %>', data);
}

/**
 * 更新<%= modelName %>
 * @param id 
 * @param data 
 */
export function update<%= className %>(id: number, data: Partial<Omit<<%= className %>, <% 
  const omitUpdateFields = columns.filter(col => col.isPk || (!col.isEdit)).map(col => `'${col.columnName}'`).join(' | '); 
%><%= omitUpdateFields %>> ) {
  return http.put<<%=className %>>(`/<%= helper.toKebabCase(className) %>/${id}`, data);
}

/**
 * 删除<%= modelName %>
 * @param id 
 */
export function delete<%= className %>(id: number) {
  return http.delete(`/<%= helper.toKebabCase(className) %>/${id}`);
}

/**
 * 获取<%= modelName %>详情
 * @param id 
 */
export function get<%= className %>(id: number) {
  return http.get<<%=className %>>(`/<%= helper.toKebabCase(className) %>/${id}`);
}

/**
 * 获取<%= modelName %>列表
 * @param params 
 */
export function list<%= className %>(params?: <%= className %>Query) {
  return http.get<<%=className %>ListResult>('/<%= helper.toKebabCase(className) %>', { params });
}